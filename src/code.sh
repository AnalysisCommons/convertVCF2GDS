#!/bin/bash
# CHARGE_SeqMeta2 0.0.2
# Generated by dx-app-wizard.
#
# Basic execution pattern: Your app will run on a single machine from
# beginning to end.
#
# Your job's input variables (if any) will be loaded as environment
# variables before this script runs.  Any array inputs will be loaded
# as bash arrays.
#
# Any code outside of main() (or any entry point you may add) is
# ALWAYS executed, followed by running the entry point itself.
#
# See https://wiki.dnanexus.com/Developer-Portal for tutorials on how
# to modify this file.

main() {


    echo "Value of vcf_filename: '${vcf_filename[@]}'"
    echo "Value of file_basename: '$file_basename'"


    # install R
    # add R to path 
    make & 
    wait
    export PATH=/opt/R/bin/:${PATH}
    export MKL_NUM_THREADS=1
    echo "INSTALLING GENESIS"
    Rscript install_genesis.R &


    wait

    set -x
    
    for i in ${!vcf_filename[@]}
    do
        dx download "${vcf_filename[$i]}" -o vcf_filename$i
    done
    
    ls -sh

  
    num_files=${#vcf_filename[@]} # So the R script knows what to expect
    last=$(( num_files - 1 ))
    vcf_files=$( echo vcf_filename{0..$last} )
    echo "\$vcf_files: ${vcf_files[@]}"

    # wait if debug 
    if [ ${debug} -ne 0 ]
    then
       echo "DEBUG is on sleeping for ${debug}h"
       echo "Rscript convertVCF2GDS.R file_basename $num_files $(seq -f "vcf_filename%.0f" 0 $last)"
       sleep ${debug}h
    fi 

    Rscript convertVCF2GDS.R file_basename $num_files $(seq -f "vcf_filename%.0f" 0 $last)
    


    ls -sh

    mv file_basename.gds "$file_basename".gds
    echo "$file_basename".gds
    echo file_basename.gds
    date
    results=$( dx upload "$file_basename".gds --brief )
    dx-jobutil-add-output results "$results" --class=file

    echo "Job Completed."

}
